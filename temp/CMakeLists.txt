cmake_minimum_required(VERSION 3.2)
set(EXTERNAL_PROJECTS "")
set(EXTERNAL_LIBS "")
include(ExternalProject)

# Set compiler(s) per project as required to CMAKE_ARGS in ExternalProject_Add(..).
#       -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
#       -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
set(EXTERNAL_CMAKE_ARGS -D CMAKE_SYSROOT=${CMAKE_SYSROOT}
    -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=${CMAKE_FIND_ROOT_PATH_MODE_PROGRAM}
    -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=${CMAKE_FIND_ROOT_PATH_MODE_LIBRARY}
    -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=${CMAKE_FIND_ROOT_PATH_MODE_INCLUDE}
    -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=${CMAKE_FIND_ROOT_PATH_MODE_PACKAGE}
)

set(AZURE Microsoft.WindowsAzure.Storage)
set(AZURE_SRC azure-storage-cpp-src)
set(EXTERNAL_PROJECTS ${EXTERNAL_PROJECTS} ${AZURE_SRC} ${AZURE})
set(AZURE_SRC_GIT_BRANCH "master")

set(COTS_PATH ${COTS_PROJECTS_DIR})
message (status "CMAKE_SOURCE_DIR=${CMAKE_SOURCE_DIR}")
message (status "CMAKE_BINARY_DIR=${CMAKE_BINARY_DIR}")

ExternalProject_Add(${AZURE_SRC}
    PREFIX ${AZURE_SRC}
    GIT_REPOSITORY "https://github.com/Azure/azure-storage-cpp.git"
    GIT_TAG ${AZURE_SRC_GIT_BRANCH}
    UPDATE_COMMAND ""
    CONFIGURE_COMMAND ""
    BUILD_COMMAND ""
    BUILD_BYPRODUCTS ${CMAKE_BINARY_DIR}/${AZURE_SRC}/src/${AZURE_SRC}/${AZURE}/CMakeLists.txt
    INSTALL_COMMAND ""
)



ExternalProject_Add(${AZURE}
    DEPENDS ${AZURE_SRC}
    PREFIX ${AZURE}
    DOWNLOAD_COMMAND ""
    SOURCE_DIR ${CMAKE_BINARY_DIR}/${AZURE_SRC}/src/${AZURE_SRC}/${AZURE}
    CMAKE_ARGS ${EXTERNAL_CMAKE_ARGS} 
        -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER} 
        -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
        -DCASABLANCA_DIR=/tmp/casablanca

    INSTALL_COMMAND rm -rf ${CMAKE_SOURCE_DIR}/${AZURE_SRC}/include && mkdir -p  ${COTS_PATH}/${AZURE_SRC}/include &&
        echo "ln -sr ${CMAKE_BINARY_DIR}/${AZURE_SRC}/src/${AZURE_SRC}/${AZURE}/includes/*.* ${CMAKE_SOURCE_DIR}/${AZURE_SRC}/include" &&
    echo "ln -sr ${CMAKE_BINARY_DIR}/${AZURE}/src/${AZURE}-build/Binaries ${COTS_PATH}/${AZURE_SRC}" | bash
)

set(AZURE_LIBRARY_PATH ${CMAKE_SOURCE_DIR}/${AZURE_SRC}/Binaries)
set(AZURE_INCLUDE_PATH ${CMAKE_SOURCE_DIR}/${AZURE_SRC}/include)


set(LIBAZURE libazure)
add_library(${LIBAZURE} STATIC IMPORTED)
set_property(TARGET ${LIBAZURE} PROPERTY IMPORTED_LOCATION ${AZURE_LIBRARY_PATH})
add_dependencies(${LIBAZURE} ${AZURE})
set(EXTERNAL_LIBS ${EXTERNAL_LIBS} ${LIBAZURE})

set(LIBAZURECPP libazurebcpp)
add_library(${LIBAZURECPP} STATIC IMPORTED)
set_property(TARGET ${LIBAZURECPP} PROPERTY IMPORTED_LOCATION ${AZURE_INCLUDE_PATH})
add_dependencies(${LIBAZURECPP} ${AZURE})
set(EXTERNAL_LIBS ${EXTERNAL_LIBS} ${LIBAZURECPP})
