include(ExternalProject)

set(CMAKE_CXX_FLAGS -std=c++11)

message (STATUS "AZURE global output path dir = ${GLOBAL_OUTPUT_PATH}")

set(AZURE_CURRENT_BINARY_DIR  ${CMAKE_CURRENT_BINARY_DIR}/cots/azure)

message (STATUS "AZURE AZURE_CURRENT_BINARY_DIR = ${AZURE_CURRENT_BINARY_DIR}")

cmake_minimum_required(VERSION 3.2)
set(EXTERNAL_PROJECTS "")
set(EXTERNAL_LIBS "")
include(ExternalProject)

# Set compiler(s) per project as required to CMAKE_ARGS in ExternalProject_Add(..).
#       -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
#       -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
set(EXTERNAL_CMAKE_ARGS -D CMAKE_SYSROOT=${CMAKE_SYSROOT}
    -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=${CMAKE_FIND_ROOT_PATH_MODE_PROGRAM}
    -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=${CMAKE_FIND_ROOT_PATH_MODE_LIBRARY}
    -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=${CMAKE_FIND_ROOT_PATH_MODE_INCLUDE}
    -DCMAKE_FIND_ROOT_PATH_MODE_PACKAGE=${CMAKE_FIND_ROOT_PATH_MODE_PACKAGE}
)

set(AZURE Microsoft.WindowsAzure.Storage)
set(AZURE_SRC azure-storage-cpp)
set(EXTERNAL_PROJECTS ${EXTERNAL_PROJECTS} ${AZURE_SRC} ${AZURE})
set(AZURE_SRC_GIT_BRANCH "master")

set(COTS_PATH ${COTS_PROJECTS_DIR})
message (STATUS "COTS_PATH=${COTS_PATH}")
message (STATUS "CMAKE_BINARY_DIR=${CMAKE_BINARY_DIR}")

ExternalProject_Add(${AZURE_SRC}
    PREFIX ${AZURE_CURRENT_BINARY_DIR}
    GIT_REPOSITORY "https://github.com/Azure/azure-storage-cpp.git"
    GIT_TAG ${AZURE_SRC_GIT_BRANCH}
    UPDATE_COMMAND ""
    CONFIGURE_COMMAND ""
    BUILD_COMMAND ""
    BUILD_BYPRODUCTS ${AZURE_CURRENT_BINARY_DIR}/src/${AZURE_SRC}/${AZURE}/CMakeLists.txt
    INSTALL_COMMAND ""
)



ExternalProject_Add(${AZURE}
    DEPENDS ${AZURE_SRC}
    PREFIX ${AZURE_CURRENT_BINARY_DIR}
    DOWNLOAD_COMMAND ""
    SOURCE_DIR ${AZURE_CURRENT_BINARY_DIR}/src/${AZURE_SRC}/${AZURE}
    CMAKE_ARGS ${EXTERNAL_CMAKE_ARGS} 
        -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER} 
        -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
        -DCASABLANCA_DIR=/tmp/casablanca

    INSTALL_COMMAND rm -rf ${COTS_PATH}/${AZURE_SRC} && mkdir -p ${COTS_PATH}/${AZURE_SRC} && 
        echo "ln -sf ${AZURE_CURRENT_BINARY_DIR}/src/${AZURE_SRC}/${AZURE}/includes/   ${COTS_PATH}/${AZURE_SRC}/includes" | bash && echo "ln -sf ${AZURE_CURRENT_BINARY_DIR}/src/${AZURE}-build/Binaries/ ${COTS_PATH}/${AZURE_SRC}/libs" | bash 
)


# && mkdir ${COTS_PATH}/${AZURE_SRC}/libs && echo "cp -rf ${AZURE_CURRENT_BINARY_DIR}/${AZURE}/src/${AZURE}-build/Binaries/*.* ${COTS_PATH}/${AZURE_SRC}/libs"

set(AZURE_LIBRARY_PATH ${COTS_PATH}/${AZURE_SRC}/libs)
set(AZURE_INCLUDE_PATH ${COTS_PATH}/${AZURE_SRC}/includes)

message (STATUS "AZURE AZURE_LIBRARY_PATH = ${AZURE_LIBRARY_PATH}")
message (STATUS "AZURE AZURE_INCLUDE_PATH = ${AZURE_INCLUDE_PATH}")

